/*
 * This file is generated by jOOQ.
 */
package com.fligneul.srm.jooq;


import com.fligneul.srm.jooq.tables.Attendance;
import com.fligneul.srm.jooq.tables.Firingpoint;
import com.fligneul.srm.jooq.tables.Firingpost;
import com.fligneul.srm.jooq.tables.Licensee;
import com.fligneul.srm.jooq.tables.User;
import com.fligneul.srm.jooq.tables.Weapon;
import com.fligneul.srm.jooq.tables.records.AttendanceRecord;
import com.fligneul.srm.jooq.tables.records.FiringpointRecord;
import com.fligneul.srm.jooq.tables.records.FiringpostRecord;
import com.fligneul.srm.jooq.tables.records.LicenseeRecord;
import com.fligneul.srm.jooq.tables.records.UserRecord;
import com.fligneul.srm.jooq.tables.records.WeaponRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in the
 * default schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AttendanceRecord> PK_ATTENDANCE = Internal.createUniqueKey(Attendance.ATTENDANCE, DSL.name("PK_ATTENDANCE"), new TableField[] { Attendance.ATTENDANCE.ID }, true);
    public static final UniqueKey<FiringpointRecord> PK_FIRINGPOINT = Internal.createUniqueKey(Firingpoint.FIRINGPOINT, DSL.name("PK_FIRINGPOINT"), new TableField[] { Firingpoint.FIRINGPOINT.ID }, true);
    public static final UniqueKey<FiringpostRecord> PK_FIRINGPOST = Internal.createUniqueKey(Firingpost.FIRINGPOST, DSL.name("PK_FIRINGPOST"), new TableField[] { Firingpost.FIRINGPOST.ID }, true);
    public static final UniqueKey<LicenseeRecord> PK_LICENSEE = Internal.createUniqueKey(Licensee.LICENSEE, DSL.name("PK_LICENSEE"), new TableField[] { Licensee.LICENSEE.ID }, true);
    public static final UniqueKey<UserRecord> CONSTRAINT_2 = Internal.createUniqueKey(User.USER, DSL.name("CONSTRAINT_2"), new TableField[] { User.USER.USERNAME }, true);
    public static final UniqueKey<UserRecord> PK_USER = Internal.createUniqueKey(User.USER, DSL.name("PK_USER"), new TableField[] { User.USER.ID }, true);
    public static final UniqueKey<WeaponRecord> PK_WEAPON = Internal.createUniqueKey(Weapon.WEAPON, DSL.name("PK_WEAPON"), new TableField[] { Weapon.WEAPON.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AttendanceRecord, FiringpointRecord> FK_ATTENDANCE_FIRINGPOINT_ID = Internal.createForeignKey(Attendance.ATTENDANCE, DSL.name("FK_ATTENDANCE_FIRINGPOINT_ID"), new TableField[] { Attendance.ATTENDANCE.FIRINGPOINTID }, Keys.PK_FIRINGPOINT, new TableField[] { Firingpoint.FIRINGPOINT.ID }, true);
    public static final ForeignKey<AttendanceRecord, FiringpostRecord> FK_ATTENDANCE_FIRINGPOST_ID = Internal.createForeignKey(Attendance.ATTENDANCE, DSL.name("FK_ATTENDANCE_FIRINGPOST_ID"), new TableField[] { Attendance.ATTENDANCE.FIRINGPOSTID }, Keys.PK_FIRINGPOST, new TableField[] { Firingpost.FIRINGPOST.ID }, true);
    public static final ForeignKey<AttendanceRecord, LicenseeRecord> FK_ATTENDANCE_LICENSEE_ID = Internal.createForeignKey(Attendance.ATTENDANCE, DSL.name("FK_ATTENDANCE_LICENSEE_ID"), new TableField[] { Attendance.ATTENDANCE.LICENSEEID }, Keys.PK_LICENSEE, new TableField[] { Licensee.LICENSEE.ID }, true);
    public static final ForeignKey<AttendanceRecord, WeaponRecord> FK_ATTENDANCE_WEAPON_ID = Internal.createForeignKey(Attendance.ATTENDANCE, DSL.name("FK_ATTENDANCE_WEAPON_ID"), new TableField[] { Attendance.ATTENDANCE.WEAPONID }, Keys.PK_WEAPON, new TableField[] { Weapon.WEAPON.ID }, true);
    public static final ForeignKey<FiringpostRecord, FiringpointRecord> FK_FIRINGPOST_FIRINGPOINT_ID = Internal.createForeignKey(Firingpost.FIRINGPOST, DSL.name("FK_FIRINGPOST_FIRINGPOINT_ID"), new TableField[] { Firingpost.FIRINGPOST.FIRINGPOINTID }, Keys.PK_FIRINGPOINT, new TableField[] { Firingpoint.FIRINGPOINT.ID }, true);
}
